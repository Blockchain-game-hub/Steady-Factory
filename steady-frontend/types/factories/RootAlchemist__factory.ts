/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RootAlchemist, RootAlchemistInterface } from "../RootAlchemist";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_CGT",
        type: "address",
      },
      {
        internalType: "address",
        name: "_Steady",
        type: "address",
      },
      {
        internalType: "address",
        name: "_Unsteady",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mergedAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "price",
        type: "int256",
      },
    ],
    name: "Merge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "splitAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "price",
        type: "int256",
      },
    ],
    name: "Split",
    type: "event",
  },
  {
    inputs: [],
    name: "CGT",
    outputs: [
      {
        internalType: "contract ICGT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cgtAmountToMerge",
        type: "uint256",
      },
    ],
    name: "mergeCGT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFromOracle",
    outputs: [
      {
        internalType: "int256",
        name: "price",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "splitCGT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "steady",
    outputs: [
      {
        internalType: "contract Steady",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unsteady",
    outputs: [
      {
        internalType: "contract Unsteady",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class RootAlchemist__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _CGT: string,
    _Steady: string,
    _Unsteady: string,
    _priceOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RootAlchemist> {
    return super.deploy(
      _CGT,
      _Steady,
      _Unsteady,
      _priceOracle,
      overrides || {}
    ) as Promise<RootAlchemist>;
  }
  getDeployTransaction(
    _CGT: string,
    _Steady: string,
    _Unsteady: string,
    _priceOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _CGT,
      _Steady,
      _Unsteady,
      _priceOracle,
      overrides || {}
    );
  }
  attach(address: string): RootAlchemist {
    return super.attach(address) as RootAlchemist;
  }
  connect(signer: Signer): RootAlchemist__factory {
    return super.connect(signer) as RootAlchemist__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootAlchemistInterface {
    return new utils.Interface(_abi) as RootAlchemistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootAlchemist {
    return new Contract(address, _abi, signerOrProvider) as RootAlchemist;
  }
}
