/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Alchemist, AlchemistInterface } from "../Alchemist";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mergedAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "price",
        type: "int256",
      },
    ],
    name: "Merge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "splitAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "price",
        type: "int256",
      },
    ],
    name: "Split",
    type: "event",
  },
  {
    inputs: [],
    name: "Chyme",
    outputs: [
      {
        internalType: "contract ICHYME",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "elixir",
    outputs: [
      {
        internalType: "contract IERC20Burnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "elixirAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getElixirAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSteadyAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_Chyme",
        type: "address",
      },
      {
        internalType: "address",
        name: "_Steady",
        type: "address",
      },
      {
        internalType: "address",
        name: "_Elixir",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ChymeAmountToMerge",
        type: "uint256",
      },
    ],
    name: "merge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFromOracle",
    outputs: [
      {
        internalType: "int256",
        name: "price",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "split",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "steady",
    outputs: [
      {
        internalType: "contract IERC20Burnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "steadyAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600081905550611dc7806100286000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639450ef5e116100715780639450ef5e1461017f57806396f392f41461019d578063dbceb005146101bb578063dc4925ba146101eb578063f3908e2414610209578063f8c8765e14610227576100b4565b806311a07f91146100b957806324a47aeb146100d75780632630c12f1461010757806333db9a87146101255780635f590b97146101435780637eacc25f14610161575b600080fd5b6100c1610243565b6040516100ce9190611887565b60405180910390f35b6100f160048036038101906100ec91906115b4565b6103d0565b6040516100fe9190611836565b60405180910390f35b61010f61091d565b60405161011c91906117bb565b60405180910390f35b61012d610943565b60405161013a91906117bb565b60405180910390f35b61014b61096d565b60405161015891906117bb565b60405180910390f35b610169610997565b604051610176919061186c565b60405180910390f35b6101876109bd565b60405161019491906117bb565b60405180910390f35b6101a56109e3565b6040516101b2919061186c565b60405180910390f35b6101d560048036038101906101d091906115b4565b610a09565b6040516101e29190611836565b60405180910390f35b6101f3610edf565b6040516102009190611851565b60405180910390f35b610211610f05565b60405161021e91906117bb565b60405180910390f35b610241600480360381019061023c91906114f3565b610f2b565b005b6000806040516024016040516020818303038152906040527f50d25bcd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161031491906117a4565b600060405180830381855afa9150503d806000811461034f576040519150601f19603f3d011682016040523d82523d6000602084013e610354565b606091505b509150508080602001905181019061036c9190611587565b92506001831215801561038c57506c0c9f2c9cd04674edea400000008313155b6103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c2906119d2565b60405180910390fd5b505090565b600060026000541415610418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040f906119b2565b60405180910390fd5b6002600081905550600a82101561042e57600080fd5b610436611470565b61043e611470565b6000610448610243565b90506402540be40081604b8761045e9190611a7e565b6104689190611a7e565b6104729190611a4d565b826020018181525050606460198661048a9190611a7e565b6104949190611a4d565b836020018181525050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104f891906117bb565b60206040518083038186803b15801561051057600080fd5b505afa158015610524573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054891906115e1565b826000018181525050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105ac91906117bb565b60206040518083038186803b1580156105c457600080fd5b505afa1580156105d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fc91906115e1565b836000018181525050826000015183602001511115610650576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064790611992565b60405180910390fd5b81600001518260200151111561069b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069290611972565b60405180910390fd5b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333876040518363ffffffff1660e01b81526004016106f892919061180d565b602060405180830381600087803b15801561071257600080fd5b505af1158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a919061155a565b506107936040518060400160405280601f81526020017f4275726e20456c697869723a2025730a4275726e205374656164793a2025730081525084602001518460200151611012565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc67903385602001516040518363ffffffff1660e01b81526004016107f492919061180d565b600060405180830381600087803b15801561080e57600080fd5b505af1158015610822573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc67903384602001516040518363ffffffff1660e01b815260040161088792919061180d565b600060405180830381600087803b1580156108a157600080fd5b505af11580156108b5573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fe16ce85ab68c6b954fe4487ea4075f9afd57602a905875f367a50eef4c7d5b8786836040516109019291906119f2565b60405180910390a2600193505050506001600081905550919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060026000541415610a51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a48906119b2565b60405180910390fd5b6002600081905550610a976040518060400160405280601481526020017f62616c616e636520696e20636f6e74726163743a0000000000000000000000008152506110b1565b600a821015610aa557600080fd5b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b0291906117bb565b60206040518083038186803b158015610b1a57600080fd5b505afa158015610b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5291906115e1565b905080831115610b97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8e90611932565b60405180910390fd5b6000610ba1610243565b905060006402540be40082604b87610bb99190611a7e565b610bc39190611a7e565b610bcd9190611a4d565b9050600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b8152600401610c2e939291906117d6565b602060405180830381600087803b158015610c4857600080fd5b505af1158015610c5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c80919061155a565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401610cde92919061180d565b600060405180830381600087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933600a80606460198b610d619190611a7e565b610d6b9190611a4d565b610d759190611a4d565b610d7f9190611a7e565b6040518363ffffffff1660e01b8152600401610d9c92919061180d565b600060405180830381600087803b158015610db657600080fd5b505af1158015610dca573d6000803e3d6000fd5b50505050610e0d6040518060400160405280601281526020017f53544541445920414e535745523a3a20257300000000000000000000000000008152508261114a565b610e7b6040518060400160405280601381526020017f45584c4958495220414e535745523a3a20257300000000000000000000000000815250600a80606460198a610e589190611a7e565b610e629190611a4d565b610e6c9190611a4d565b610e769190611a7e565b61114a565b3373ffffffffffffffffffffffffffffffffffffffff167f563287642471a421e73cd8c32313a493560c2f122e409c0099b4449f7297cce68684604051610ec39291906119f2565b60405180910390a2600193505050506001600081905550919050565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054906101000a900460ff1680610f515750600160009054906101000a900460ff16155b610f90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8790611952565b60405180910390fd5b600060018054906101000a900460ff161590508015610fde5760018060016101000a81548160ff02191690831515021790555060018060006101000a81548160ff0219169083151502179055505b610fea858585856111e6565b801561100b5760006001806101000a81548160ff0219169083151502179055505b5050505050565b6110ac83838360405160240161102a939291906118f4565b6040516020818303038152906040527f969cdd03000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611447565b505050565b611147816040516024016110c591906118a2565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611447565b50565b6111e282826040516024016111609291906118c4565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611447565b5050565b60018054906101000a900460ff168061120c5750600160009054906101000a900460ff16155b61124b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124290611952565b60405180910390fd5b600060018054906101000a900460ff1615905080156112995760018060016101000a81548160ff02191690831515021790555060018060006101000a81548160ff0219169083151502179055505b84600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156114405760006001806101000a81548160ff0219169083151502179055505b5050505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b604051806040016040528060008152602001600081525090565b60008135905061149981611d35565b92915050565b6000815190506114ae81611d4c565b92915050565b6000815190506114c381611d63565b92915050565b6000813590506114d881611d7a565b92915050565b6000815190506114ed81611d7a565b92915050565b6000806000806080858703121561150d5761150c611c03565b5b600061151b8782880161148a565b945050602061152c8782880161148a565b935050604061153d8782880161148a565b925050606061154e8782880161148a565b91505092959194509250565b6000602082840312156115705761156f611c03565b5b600061157e8482850161149f565b91505092915050565b60006020828403121561159d5761159c611c03565b5b60006115ab848285016114b4565b91505092915050565b6000602082840312156115ca576115c9611c03565b5b60006115d8848285016114c9565b91505092915050565b6000602082840312156115f7576115f6611c03565b5b6000611605848285016114de565b91505092915050565b61161781611ad8565b82525050565b61162681611aea565b82525050565b600061163782611a1b565b6116418185611a31565b9350611651818560208601611b72565b80840191505092915050565b61166681611b2a565b82525050565b61167581611b4e565b82525050565b61168481611af6565b82525050565b600061169582611a26565b61169f8185611a3c565b93506116af818560208601611b72565b6116b881611c08565b840191505092915050565b60006116d0601c83611a3c565b91506116db82611c19565b602082019050919050565b60006116f3602e83611a3c565b91506116fe82611c42565b604082019050919050565b6000611716601083611a3c565b915061172182611c91565b602082019050919050565b6000611739601083611a3c565b915061174482611cba565b602082019050919050565b600061175c601f83611a3c565b915061176782611ce3565b602082019050919050565b600061177f601c83611a3c565b915061178a82611d0c565b602082019050919050565b61179e81611b20565b82525050565b60006117b0828461162c565b915081905092915050565b60006020820190506117d0600083018461160e565b92915050565b60006060820190506117eb600083018661160e565b6117f8602083018561160e565b6118056040830184611795565b949350505050565b6000604082019050611822600083018561160e565b61182f6020830184611795565b9392505050565b600060208201905061184b600083018461161d565b92915050565b6000602082019050611866600083018461165d565b92915050565b6000602082019050611881600083018461166c565b92915050565b600060208201905061189c600083018461167b565b92915050565b600060208201905081810360008301526118bc818461168a565b905092915050565b600060408201905081810360008301526118de818561168a565b90506118ed6020830184611795565b9392505050565b6000606082019050818103600083015261190e818661168a565b905061191d6020830185611795565b61192a6040830184611795565b949350505050565b6000602082019050818103600083015261194b816116c3565b9050919050565b6000602082019050818103600083015261196b816116e6565b9050919050565b6000602082019050818103600083015261198b81611709565b9050919050565b600060208201905081810360008301526119ab8161172c565b9050919050565b600060208201905081810360008301526119cb8161174f565b9050919050565b600060208201905081810360008301526119eb81611772565b9050919050565b6000604082019050611a076000830185611795565b611a14602083018461167b565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611a5882611b20565b9150611a6383611b20565b925082611a7357611a72611bd4565b5b828204905092915050565b6000611a8982611b20565b9150611a9483611b20565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611acd57611acc611ba5565b5b828202905092915050565b6000611ae382611b00565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611b3582611b3c565b9050919050565b6000611b4782611b00565b9050919050565b6000611b5982611b60565b9050919050565b6000611b6b82611b00565b9050919050565b60005b83811015611b90578082015181840152602081019050611b75565b83811115611b9f576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f596f7520646f206e6f74206861766520656e6f756768204368796d6500000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4e656564206d6f72652053746561647900000000000000000000000000000000600082015250565b7f4e656564206d6f726520456c6978697200000000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f4f7261636c65207072696365206973206f7574206f662072616e676500000000600082015250565b611d3e81611ad8565b8114611d4957600080fd5b50565b611d5581611aea565b8114611d6057600080fd5b50565b611d6c81611af6565b8114611d7757600080fd5b50565b611d8381611b20565b8114611d8e57600080fd5b5056fea26469706673582212207b505136c6b4b12344f6d1a55dbe45f373544c85289cef06918437a078ed37d964736f6c63430008060033";

export class Alchemist__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Alchemist> {
    return super.deploy(overrides || {}) as Promise<Alchemist>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Alchemist {
    return super.attach(address) as Alchemist;
  }
  connect(signer: Signer): Alchemist__factory {
    return super.connect(signer) as Alchemist__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlchemistInterface {
    return new utils.Interface(_abi) as AlchemistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Alchemist {
    return new Contract(address, _abi, signerOrProvider) as Alchemist;
  }
}
