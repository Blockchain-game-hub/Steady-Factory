/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DummyPriceOracleForTesting,
  DummyPriceOracleForTestingInterface,
} from "../DummyPriceOracleForTesting";

const _abi = [
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_price",
        type: "int256",
      },
    ],
    name: "setLatestPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610150806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063805fe7fb1461003b5780638e15f47314610057575b600080fd5b6100556004803603810190610050919061009d565b610075565b005b61005f61007f565b60405161006c91906100d9565b60405180910390f35b8060008190555050565b60008054905090565b60008135905061009781610103565b92915050565b6000602082840312156100b3576100b26100fe565b5b60006100c184828501610088565b91505092915050565b6100d3816100f4565b82525050565b60006020820190506100ee60008301846100ca565b92915050565b6000819050919050565b600080fd5b61010c816100f4565b811461011757600080fd5b5056fea26469706673582212205974d8fa4faacdccb39e3c54e307e921aea0808a81a5c347a98634b11bff4bc764736f6c63430008060033";

export class DummyPriceOracleForTesting__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DummyPriceOracleForTesting> {
    return super.deploy(overrides || {}) as Promise<DummyPriceOracleForTesting>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DummyPriceOracleForTesting {
    return super.attach(address) as DummyPriceOracleForTesting;
  }
  connect(signer: Signer): DummyPriceOracleForTesting__factory {
    return super.connect(signer) as DummyPriceOracleForTesting__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyPriceOracleForTestingInterface {
    return new utils.Interface(_abi) as DummyPriceOracleForTestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyPriceOracleForTesting {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DummyPriceOracleForTesting;
  }
}
