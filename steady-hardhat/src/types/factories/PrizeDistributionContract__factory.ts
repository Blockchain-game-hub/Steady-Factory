/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PrizeDistributionContract,
  PrizeDistributionContractInterface,
} from "../PrizeDistributionContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_merkleDistributor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fetchMerkle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "checkData",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_jobId",
        type: "bytes32",
      },
    ],
    name: "setJobId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001600455436007553480156200001a57600080fd5b506040516200109d3803806200109d8339818101604052810190620000409190620001cf565b6200006062000054620000ea60201b60201c565b620000f260201b60201c565b81600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000269565b600033905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001c9816200024f565b92915050565b60008060408385031215620001e957620001e86200024a565b5b6000620001f985828601620001b8565b92505060206200020c85828601620001b8565b9150509250929050565b600062000223826200022a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200025a8162000216565b81146200026657600080fd5b50565b610e2480620002796000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634585e33b14610067578063508954f8146100835780636e04ff0d1461009f578063715018a6146100d05780638da5cb5b146100da578063f2fde38b146100f8575b600080fd5b610081600480360381019061007c91906108a7565b610114565b005b61009d6004803603810190610098919061084d565b6103e1565b005b6100b960048036038101906100b491906108a7565b610467565b6040516100c7929190610a85565b60405180910390f35b6100d86104bc565b005b6100e2610544565b6040516100ef9190610a6a565b60405180910390f35b610112600480360381019061010d91906107f3565b61056e565b005b6000828281019061012591906108f4565b9050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632eb76e01826040518263ffffffff1660e01b81526004016101829190610afe565b602060405180830381600087803b15801561019c57600080fd5b505af11580156101b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d4919061087a565b50600080600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527faa082864000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102a19190610a53565b600060405180830381855afa9150503d80600081146102dc576040519150601f19603f3d011682016040523d82523d6000602084013e6102e1565b606091505b509150915081610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d90610b2c565b60405180910390fd5b60008180602001905181019061033c919061087a565b9050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ea8b5378260018761038a9190610ba4565b6040518363ffffffff1660e01b81526004016103a7929190610ab5565b600060405180830381600087803b1580156103c157600080fd5b505af11580156103d5573d6000803e3d6000fd5b50505050505050505050565b6103e9610666565b73ffffffffffffffffffffffffffffffffffffffff16610407610544565b73ffffffffffffffffffffffffffffffffffffffff161461045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490610b4c565b60405180910390fd5b80600a8190555050565b600060606000848481019061047c9190610820565b9050670de0b6b3a76400008173ffffffffffffffffffffffffffffffffffffffff1631106040518060200160405280600081525092509250509250929050565b6104c4610666565b73ffffffffffffffffffffffffffffffffffffffff166104e2610544565b73ffffffffffffffffffffffffffffffffffffffff1614610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f90610b4c565b60405180910390fd5b610542600061066e565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610576610666565b73ffffffffffffffffffffffffffffffffffffffff16610594610544565b73ffffffffffffffffffffffffffffffffffffffff16146105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190610b4c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561065a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065190610ade565b60405180910390fd5b6106638161066e565b50565b600033905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061074381610d92565b92915050565b60008135905061075881610da9565b92915050565b60008135905061076d81610dc0565b92915050565b60008151905061078281610dc0565b92915050565b60008083601f84011261079e5761079d610ca3565b5b8235905067ffffffffffffffff8111156107bb576107ba610c9e565b5b6020830191508360018202830111156107d7576107d6610ca8565b5b9250929050565b6000813590506107ed81610dd7565b92915050565b60006020828403121561080957610808610cb2565b5b600061081784828501610734565b91505092915050565b60006020828403121561083657610835610cb2565b5b600061084484828501610749565b91505092915050565b60006020828403121561086357610862610cb2565b5b60006108718482850161075e565b91505092915050565b6000602082840312156108905761088f610cb2565b5b600061089e84828501610773565b91505092915050565b600080602083850312156108be576108bd610cb2565b5b600083013567ffffffffffffffff8111156108dc576108db610cad565b5b6108e885828601610788565b92509250509250929050565b60006020828403121561090a57610909610cb2565b5b6000610918848285016107de565b91505092915050565b61092a81610bd8565b82525050565b61093981610bfc565b82525050565b61094881610c08565b82525050565b600061095982610b6c565b6109638185610b77565b9350610973818560208601610c3c565b61097c81610cb7565b840191505092915050565b600061099282610b6c565b61099c8185610b88565b93506109ac818560208601610c3c565b80840191505092915050565b60006109c5602683610b93565b91506109d082610cc8565b604082019050919050565b60006109e8600c83610b93565b91506109f382610d17565b602082019050919050565b6000610a0b601b83610b93565b9150610a1682610d40565b602082019050919050565b6000610a2e602083610b93565b9150610a3982610d69565b602082019050919050565b610a4d81610c32565b82525050565b6000610a5f8284610987565b915081905092915050565b6000602082019050610a7f6000830184610921565b92915050565b6000604082019050610a9a6000830185610930565b8181036020830152610aac818461094e565b90509392505050565b6000604082019050610aca600083018561093f565b610ad76020830184610a44565b9392505050565b60006020820190508181036000830152610af7816109b8565b9050919050565b60006040820190508181036000830152610b17816109db565b9050610b266020830184610a44565b92915050565b60006020820190508181036000830152610b45816109fe565b9050919050565b60006020820190508181036000830152610b6581610a21565b9050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610baf82610c32565b9150610bba83610c32565b925082821015610bcd57610bcc610c6f565b5b828203905092915050565b6000610be382610c12565b9050919050565b6000610bf582610c12565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610c5a578082015181840152602081019050610c3f565b83811115610c69576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5f706174684f6656616c75650000000000000000000000000000000000000000600082015250565b7f556e61626c6520746f206665746368206d65726b6c6520686173680000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610d9b81610bd8565b8114610da657600080fd5b50565b610db281610bea565b8114610dbd57600080fd5b50565b610dc981610c08565b8114610dd457600080fd5b50565b610de081610c32565b8114610deb57600080fd5b5056fea26469706673582212201c91664d28ef41dcfa6f63fa5b70ccc4db23e4d5d3c1fa7c94a20205c7ef771164736f6c63430008060033";

export class PrizeDistributionContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _merkleDistributor: string,
    _fetchMerkle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrizeDistributionContract> {
    return super.deploy(
      _merkleDistributor,
      _fetchMerkle,
      overrides || {}
    ) as Promise<PrizeDistributionContract>;
  }
  getDeployTransaction(
    _merkleDistributor: string,
    _fetchMerkle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _merkleDistributor,
      _fetchMerkle,
      overrides || {}
    );
  }
  attach(address: string): PrizeDistributionContract {
    return super.attach(address) as PrizeDistributionContract;
  }
  connect(signer: Signer): PrizeDistributionContract__factory {
    return super.connect(signer) as PrizeDistributionContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrizeDistributionContractInterface {
    return new utils.Interface(_abi) as PrizeDistributionContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrizeDistributionContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PrizeDistributionContract;
  }
}
