/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PrizeDistributionContract,
  PrizeDistributionContractInterface,
} from "../PrizeDistributionContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_merkleDistributor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "checkData",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161073d38038061073d8339818101604052810190610032919061004d565b506100c8565b600081519050610047816100b1565b92915050565b600060208284031215610063576100626100ac565b5b600061007184828501610038565b91505092915050565b60006100858261008c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100ba8161007a565b81146100c557600080fd5b50565b610666806100d76000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634585e33b1461003b5780636e04ff0d14610057575b600080fd5b61005560048036038101906100509190610312565b610088565b005b610071600480360381019061006c9190610312565b610129565b60405161007f9291906103a7565b60405180910390f35b6000828281019061009991906102c9565b905060005b8151811015610123578181815181106100ba576100b961057a565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400009081150290604051600060405180830381858888f1935050505015801561010f573d6000803e3d6000fd5b50808061011b90610502565b91505061009e565b50505050565b600060606000848481019061013e919061029c565b9050670de0b6b3a76400008173ffffffffffffffffffffffffffffffffffffffff1631106040518060200160405280600081525092509250509250929050565b600061019161018c846103fc565b6103d7565b905080838252602082019050828560208602820111156101b4576101b36105e2565b5b60005b858110156101e457816101ca88826101ee565b8452602084019350602083019250506001810190506101b7565b5050509392505050565b6000813590506101fd81610602565b92915050565b60008135905061021281610619565b92915050565b600082601f83011261022d5761022c6105dd565b5b813561023d84826020860161017e565b91505092915050565b60008083601f84011261025c5761025b6105dd565b5b8235905067ffffffffffffffff811115610279576102786105d8565b5b602083019150836001820283011115610295576102946105e2565b5b9250929050565b6000602082840312156102b2576102b16105ec565b5b60006102c084828501610203565b91505092915050565b6000602082840312156102df576102de6105ec565b5b600082013567ffffffffffffffff8111156102fd576102fc6105e7565b5b61030984828501610218565b91505092915050565b60008060208385031215610329576103286105ec565b5b600083013567ffffffffffffffff811115610347576103466105e7565b5b61035385828601610246565b92509250509250929050565b61036881610468565b82525050565b600061037982610428565b6103838185610433565b935061039381856020860161049e565b61039c816105f1565b840191505092915050565b60006040820190506103bc600083018561035f565b81810360208301526103ce818461036e565b90509392505050565b60006103e16103f2565b90506103ed82826104d1565b919050565b6000604051905090565b600067ffffffffffffffff821115610417576104166105a9565b5b602082029050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061044f82610474565b9050919050565b600061046182610474565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156104bc5780820151818401526020810190506104a1565b838111156104cb576000848401525b50505050565b6104da826105f1565b810181811067ffffffffffffffff821117156104f9576104f86105a9565b5b80604052505050565b600061050d82610494565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156105405761053f61054b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61060b81610444565b811461061657600080fd5b50565b61062281610456565b811461062d57600080fd5b5056fea26469706673582212201cc4d07aa3032c4cfc5d724fa7999fae7ec4c955947e2acde124432929e5362d64736f6c63430008060033";

export class PrizeDistributionContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _merkleDistributor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrizeDistributionContract> {
    return super.deploy(
      _merkleDistributor,
      overrides || {}
    ) as Promise<PrizeDistributionContract>;
  }
  getDeployTransaction(
    _merkleDistributor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_merkleDistributor, overrides || {});
  }
  attach(address: string): PrizeDistributionContract {
    return super.attach(address) as PrizeDistributionContract;
  }
  connect(signer: Signer): PrizeDistributionContract__factory {
    return super.connect(signer) as PrizeDistributionContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrizeDistributionContractInterface {
    return new utils.Interface(_abi) as PrizeDistributionContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrizeDistributionContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PrizeDistributionContract;
  }
}
