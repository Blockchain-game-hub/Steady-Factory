/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Steady, SteadyInterface } from "../Steady";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAlchemist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setAlchemist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600981526020017f53746561647943475400000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f5343475400000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620001a6565b508060049080519060200190620000af929190620001a6565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620002bb565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b49062000256565b90600052602060002090601f016020900481019282620001d8576000855562000224565b82601f10620001f357805160ff191683800117855562000224565b8280016001018555821562000224579182015b828111156200022357825182559160200191906001019062000206565b5b50905062000233919062000237565b5090565b5b808211156200025257600081600090555060010162000238565b5090565b600060028204905060018216806200026f57607f821691505b602082108114156200028657620002856200028c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61212880620002cb6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb14610333578063dd62ed3e14610363578063f1af775f14610393578063f2fde38b146103af578063f887ea40146103cb5761012c565b8063715018a6146102a157806379cc6790146102ab5780638da5cb5b146102c757806395d89b41146102e5578063a457c2d7146103035761012c565b80633759425d116100f45780633759425d146101eb578063395093511461020957806340c10f191461023957806342966c681461025557806370a08231146102715761012c565b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017f57806323b872dd1461019d578063313ce567146101cd575b600080fd5b6101396103e9565b60405161014691906118f8565b60405180910390f35b610169600480360381019061016491906115f6565b61047b565b60405161017691906118dd565b60405180910390f35b610187610499565b6040516101949190611ada565b60405180910390f35b6101b760048036038101906101b291906115a3565b6104a3565b6040516101c491906118dd565b60405180910390f35b6101d561059b565b6040516101e29190611af5565b60405180910390f35b6101f36105a4565b60405161020091906118c2565b60405180910390f35b610223600480360381019061021e91906115f6565b6105ce565b60405161023091906118dd565b60405180910390f35b610253600480360381019061024e91906115f6565b61067a565b005b61026f600480360381019061026a9190611636565b610718565b005b61028b60048036038101906102869190611536565b61072c565b6040516102989190611ada565b60405180910390f35b6102a9610774565b005b6102c560048036038101906102c091906115f6565b6107fc565b005b6102cf610877565b6040516102dc91906118c2565b60405180910390f35b6102ed6108a1565b6040516102fa91906118f8565b60405180910390f35b61031d600480360381019061031891906115f6565b610933565b60405161032a91906118dd565b60405180910390f35b61034d600480360381019061034891906115f6565b610a1e565b60405161035a91906118dd565b60405180910390f35b61037d60048036038101906103789190611563565b610a3c565b60405161038a9190611ada565b60405180910390f35b6103ad60048036038101906103a89190611536565b610ac3565b005b6103c960048036038101906103c49190611536565b610b83565b005b6103d3610c7b565b6040516103e091906118c2565b60405180910390f35b6060600380546103f890611c3e565b80601f016020809104026020016040519081016040528092919081815260200182805461042490611c3e565b80156104715780601f1061044657610100808354040283529160200191610471565b820191906000526020600020905b81548152906001019060200180831161045457829003601f168201915b5050505050905090565b600061048f610488610ca1565b8484610ca9565b6001905092915050565b6000600254905090565b60006104b0848484610e74565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104fb610ca1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561057b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906119da565b60405180910390fd5b61058f85610587610ca1565b858403610ca9565b60019150509392505050565b60006008905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006106706105db610ca1565b8484600160006105e9610ca1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461066b9190611b2c565b610ca9565b6001905092915050565b3373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461070a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610701906119ba565b60405180910390fd5b61071482826110f5565b5050565b610729610723610ca1565b82611255565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61077c610ca1565b73ffffffffffffffffffffffffffffffffffffffff1661079a610877565b73ffffffffffffffffffffffffffffffffffffffff16146107f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e7906119fa565b60405180910390fd5b6107fa600061142c565b565b600061080f8361080a610ca1565b610a3c565b905081811015610854576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084b90611a1a565b60405180910390fd5b61086883610860610ca1565b848403610ca9565b6108728383611255565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546108b090611c3e565b80601f01602080910402602001604051908101604052809291908181526020018280546108dc90611c3e565b80156109295780601f106108fe57610100808354040283529160200191610929565b820191906000526020600020905b81548152906001019060200180831161090c57829003601f168201915b5050505050905090565b60008060016000610942610ca1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156109ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f690611a9a565b60405180910390fd5b610a13610a0a610ca1565b85858403610ca9565b600191505092915050565b6000610a32610a2b610ca1565b8484610e74565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610acb610ca1565b73ffffffffffffffffffffffffffffffffffffffff16610ae9610877565b73ffffffffffffffffffffffffffffffffffffffff1614610b3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b36906119fa565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610b8b610ca1565b73ffffffffffffffffffffffffffffffffffffffff16610ba9610877565b73ffffffffffffffffffffffffffffffffffffffff1614610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf6906119fa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c669061195a565b60405180910390fd5b610c788161142c565b50565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1090611a7a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d809061197a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610e679190611ada565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ee4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edb90611a5a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4b9061191a565b60405180910390fd5b610f5f8383836114f2565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610fe5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdc9061199a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110789190611b2c565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110dc9190611ada565b60405180910390a36110ef848484611502565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115c90611aba565b60405180910390fd5b611171600083836114f2565b80600260008282546111839190611b2c565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111d89190611b2c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161123d9190611ada565b60405180910390a361125160008383611502565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112bc90611a3a565b60405180910390fd5b6112d1826000836114f2565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134e9061193a565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546113ae9190611b82565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516114139190611ada565b60405180910390a361142783600084611502565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114fd838383611507565b505050565b505050565b505050565b60008135905061151b816120c4565b92915050565b600081359050611530816120db565b92915050565b60006020828403121561154c5761154b611cce565b5b600061155a8482850161150c565b91505092915050565b6000806040838503121561157a57611579611cce565b5b60006115888582860161150c565b92505060206115998582860161150c565b9150509250929050565b6000806000606084860312156115bc576115bb611cce565b5b60006115ca8682870161150c565b93505060206115db8682870161150c565b92505060406115ec86828701611521565b9150509250925092565b6000806040838503121561160d5761160c611cce565b5b600061161b8582860161150c565b925050602061162c85828601611521565b9150509250929050565b60006020828403121561164c5761164b611cce565b5b600061165a84828501611521565b91505092915050565b61166c81611bb6565b82525050565b61167b81611bc8565b82525050565b600061168c82611b10565b6116968185611b1b565b93506116a6818560208601611c0b565b6116af81611cd3565b840191505092915050565b60006116c7602383611b1b565b91506116d282611ce4565b604082019050919050565b60006116ea602283611b1b565b91506116f582611d33565b604082019050919050565b600061170d602683611b1b565b915061171882611d82565b604082019050919050565b6000611730602283611b1b565b915061173b82611dd1565b604082019050919050565b6000611753602683611b1b565b915061175e82611e20565b604082019050919050565b6000611776601b83611b1b565b915061178182611e6f565b602082019050919050565b6000611799602883611b1b565b91506117a482611e98565b604082019050919050565b60006117bc602083611b1b565b91506117c782611ee7565b602082019050919050565b60006117df602483611b1b565b91506117ea82611f10565b604082019050919050565b6000611802602183611b1b565b915061180d82611f5f565b604082019050919050565b6000611825602583611b1b565b915061183082611fae565b604082019050919050565b6000611848602483611b1b565b915061185382611ffd565b604082019050919050565b600061186b602583611b1b565b91506118768261204c565b604082019050919050565b600061188e601f83611b1b565b91506118998261209b565b602082019050919050565b6118ad81611bf4565b82525050565b6118bc81611bfe565b82525050565b60006020820190506118d76000830184611663565b92915050565b60006020820190506118f26000830184611672565b92915050565b600060208201905081810360008301526119128184611681565b905092915050565b60006020820190508181036000830152611933816116ba565b9050919050565b60006020820190508181036000830152611953816116dd565b9050919050565b6000602082019050818103600083015261197381611700565b9050919050565b6000602082019050818103600083015261199381611723565b9050919050565b600060208201905081810360008301526119b381611746565b9050919050565b600060208201905081810360008301526119d381611769565b9050919050565b600060208201905081810360008301526119f38161178c565b9050919050565b60006020820190508181036000830152611a13816117af565b9050919050565b60006020820190508181036000830152611a33816117d2565b9050919050565b60006020820190508181036000830152611a53816117f5565b9050919050565b60006020820190508181036000830152611a7381611818565b9050919050565b60006020820190508181036000830152611a938161183b565b9050919050565b60006020820190508181036000830152611ab38161185e565b9050919050565b60006020820190508181036000830152611ad381611881565b9050919050565b6000602082019050611aef60008301846118a4565b92915050565b6000602082019050611b0a60008301846118b3565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611b3782611bf4565b9150611b4283611bf4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b7757611b76611c70565b5b828201905092915050565b6000611b8d82611bf4565b9150611b9883611bf4565b925082821015611bab57611baa611c70565b5b828203905092915050565b6000611bc182611bd4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611c29578082015181840152602081019050611c0e565b83811115611c38576000848401525b50505050565b60006002820490506001821680611c5657607f821691505b60208210811415611c6a57611c69611c9f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f43616c6c6572206973206e6f742074686520616c6368656d6973740000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6120cd81611bb6565b81146120d857600080fd5b50565b6120e481611bf4565b81146120ef57600080fd5b5056fea2646970667358221220fe4f3b396a6192c62b5d69b4932d471e25c5919879d346607e42af06d88960ae64736f6c63430008060033";

export class Steady__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Steady> {
    return super.deploy(overrides || {}) as Promise<Steady>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Steady {
    return super.attach(address) as Steady;
  }
  connect(signer: Signer): Steady__factory {
    return super.connect(signer) as Steady__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SteadyInterface {
    return new utils.Interface(_abi) as SteadyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Steady {
    return new Contract(address, _abi, signerOrProvider) as Steady;
  }
}
